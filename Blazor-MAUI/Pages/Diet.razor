@using Syncfusion.Blazor
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Charts
@using FitnessTracker.Data
@inject FitnessService SampleService

<div class="e-dashboardlayout-container e-diet-dashboardlayout-container">
    <div class="col-md-9 e-dashboard-content">
        <div class="col-md-12 col-sm-12">
            <div id="meals-panel-id" class="e-panel e-meals-panel" data-row="0" data-col="0" data-sizeX="4" data-sizeY="1">
                <div class="e-panel-container">
                    <div class="e-panel-header">
                        <div style="float: left;">5 Course Meals</div>
                    </div>
                    <div class="e-meals-card-container e-panel-content">
                        <div tabindex="0" class="e-card e-meals-card">
                            <div class="e-card-header">
                                <div class="e-card-header-img-container e-breakfast-card-container">
                                    <div class="e-card-header-image icon-Breakfast"></div>
                                </div>
                                @if (SampleService.DietData.IsBreakFastMenuAdded && isToday && SampleService.DietData.CurrentSnack1Time > SampleService.CurrentDate)
                                {
                                    <div class="e-meals-edit">
                                        <div class="e-breakfast-edit icon-edit-2" @onclick="@(() => EditMenu("breakfast"))" @onclick:stopPropagation="true"></div>
                                    </div>
                                }
                            </div>
                            <div class="e-card-content">
                                <div class="e-card-header-caption">
                                    <div class="e-card-header-title e-meals-card-title"> Breakfast</div>
                                </div>
                                @if (SampleService.DietData.IsBreakFastMenuAdded)
                                {
                                    <div>
                                        <div class="e-had-meals">
                                            <div class="e-meals-value" title="@SampleService.DietData.CurrentBreakFastMenuText">
                                                @SampleService.DietData.CurrentBreakFastMenuText
                                            </div>
                                        </div>
                                        <div class="e-calories-gain">
                                            @SampleService.DietData.CurrentBreakFastCalories <span class="e-card-cal-unit e-add-cal-unit">kcal</span>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="e-recom-meals-text">Recommended</div>
                                    <div class="e-recom-meals-value">
                                        @breakFastRecom <span class="e-card-cal-unit">kcal</span>
                                    </div>
                                    <SfButton OnClick="@(() => AddBtnClick("breakfast"))" CssClass="e-add-menu-btn e-breakfast-add-btn" Content="ADD MENU"></SfButton>
                                }
                            </div>
                        </div>
                        <div tabindex="0" class="e-card e-meals-card">
                            <div class="e-card-header">
                                <div class="e-card-header-img-container e-snack1-card-container">
                                    <div class="e-card-header-image icon-Snack-1"></div>
                                </div>
                                @if (SampleService.DietData.IsSnack1MenuAdded && isToday && SampleService.DietData.CurrentLunchTime > SampleService.CurrentDate)
                                {
                                    <div class="e-meals-edit">
                                        <div class="e-snack1-edit icon-edit-2" @onclick="@(() => EditMenu("snack1"))" @onclick:stopPropagation="true"></div>
                                    </div>
                                }
                            </div>
                            <div class="e-card-content">
                                <div class="e-card-header-caption">
                                    <div class="e-card-header-title e-meals-card-title"> Snack</div>
                                </div>
                                @if (SampleService.DietData.IsSnack1MenuAdded)
                                {
                                    <div>
                                        <div class="e-had-meals">
                                            <div class="e-meals-value" title="@SampleService.DietData.CurrentSnack1MenuText">@SampleService.DietData.CurrentSnack1MenuText</div>
                                        </div>
                                        <div class="e-calories-gain">
                                            @SampleService.DietData.CurrentSnack1Calories <span class="e-card-cal-unit e-add-cal-unit">kcal</span>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="e-recom-meals-text">Recommended</div>
                                    <div class="e-recom-meals-value">
                                        @snack1Recom <span class="e-card-cal-unit">kcal</span>
                                    </div>
                                    <SfButton OnClick="@(() => AddBtnClick("snack1"))" CssClass="e-add-menu-btn e-snack1-add-btn" Content="ADD MENU"></SfButton>
                                }
                            </div>
                        </div>
                        <div tabindex="0" class="e-card e-meals-card">
                            <div class="e-card-header">
                                <div class="e-card-header-img-container e-lunch-card-container">
                                    <div class="e-card-header-image icon-Lunch"></div>
                                </div>
                                @if (SampleService.DietData.IsLunchMenuAdded && isToday && SampleService.DietData.CurrentSnack2Time > SampleService.CurrentDate)
                                {
                                    <div class="e-meals-edit">
                                        <div class="e-lunch-edit icon-edit-2" @onclick="@(() => EditMenu("lunch"))" @onclick:stopPropagation="true"></div>
                                    </div>
                                }
                            </div>
                            <div class="e-card-content">
                                <div class="e-card-header-caption">
                                    <div class="e-card-header-title e-meals-card-title"> Lunch</div>
                                </div>
                                @if (SampleService.DietData.IsLunchMenuAdded)
                                {
                                    <div>
                                        <div class="e-had-meals">
                                            <div class="e-meals-value" title="@SampleService.DietData.CurrentLunchMenuText">@SampleService.DietData.CurrentLunchMenuText</div>
                                        </div>
                                        <div class="e-calories-gain">
                                            @SampleService.DietData.CurrentLunchCalories <span class="e-card-cal-unit e-add-cal-unit">kcal</span>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="e-recom-meals-text">Recommended</div>
                                    <div class="e-recom-meals-value">
                                        @lunchRecom <span class="e-card-cal-unit">kcal</span>
                                    </div>
                                    <SfButton OnClick="@(() => AddBtnClick("lunch"))" CssClass="e-add-menu-btn e-lunch-add-btn" Content="ADD MENU"></SfButton>
                                }
                            </div>
                        </div>
                        <div tabindex="0" class="e-card e-meals-card">
                            <div class="e-card-header">
                                <div class="e-card-header-img-container e-snack2-card-container">
                                    <div class="e-card-header-image icon-Snack-2"></div>
                                </div>
                                @if (SampleService.DietData.IsSnack2MenuAdded && isToday && SampleService.DietData.CurrentDinnerTime > SampleService.CurrentDate)
                                {
                                    <div class="e-meals-edit">
                                        <div class="e-snack2-edit icon-edit-2" @onclick="@(() => EditMenu("snack2"))" @onclick:stopPropagation="true"></div>
                                    </div>
                                }
                            </div>
                            <div class="e-card-content">
                                <div class="e-card-header-caption">
                                    <div class="e-card-header-title e-meals-card-title"> Snack</div>
                                </div>
                                @if (SampleService.DietData.IsSnack2MenuAdded)
                                {
                                    <div>
                                        <div class="e-had-meals">
                                            <div class="e-meals-value" title="@SampleService.DietData.CurrentSnack2MenuText">@SampleService.DietData.CurrentSnack2MenuText</div>
                                        </div>
                                        <div class="e-calories-gain">
                                            @SampleService.DietData.CurrentSnack2Calories <span class="e-card-cal-unit e-add-cal-unit">kcal</span>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="e-recom-meals-text">Recommended</div>
                                    <div class="e-recom-meals-value">
                                        @snack2Recom <span class="e-card-cal-unit">kcal</span>
                                    </div>
                                    <SfButton OnClick="@(() => AddBtnClick("snack2"))" CssClass="e-add-menu-btn e-snack2-add-btn" Content="ADD MENU"></SfButton>
                                }
                            </div>
                        </div>
                        <div tabindex="0" class="e-card e-meals-card e-dinner-card">
                            <div class="e-card-header">
                                <div class="e-card-header-img-container e-dinner-card-container">
                                    <div class="e-card-header-image icon-Dinner"></div>
                                </div>
                                @if (SampleService.DietData.IsDinnerMenuAdded && isToday && DateTime.Today.Date.AddDays(1) > SampleService.CurrentDate)
                                {
                                    <div class="e-meals-edit">
                                        <div class="e-dinner-edit icon-edit-2" @onclick="@(() => EditMenu("dinner"))" @onclick:stopPropagation="true"></div>
                                    </div>
                                }
                            </div>
                            <div class="e-card-content">
                                <div class="e-card-header-caption">
                                    <div class="e-card-header-title e-meals-card-title"> Dinner</div>
                                </div>
                                @if (SampleService.DietData.IsDinnerMenuAdded)
                                {
                                    <div>
                                        <div class="e-had-meals">
                                            <div class="e-meals-value" title="@SampleService.DietData.CurrentDinnerMenuText">@SampleService.DietData.CurrentDinnerMenuText</div>
                                        </div>
                                        <div class="e-calories-gain">@SampleService.DietData.CurrentDinnerCalories <span class="e-card-cal-unit e-add-cal-unit">kcal</span></div>
                                    </div>
                                }
                                else
                                {
                                    <div class="e-recom-meals-text">Recommended</div>
                                    <div class="e-recom-meals-value">
                                        @dinnerRecom <span class="e-card-cal-unit">kcal</span>
                                    </div>
                                    <SfButton OnClick="@(() => AddBtnClick("dinner"))" CssClass="e-add-menu-btn e-dinner-add-btn" Content="ADD MENU"></SfButton>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12 col-sm-12">
            <div id="diet-chart-panel-id" class="e-panel e-diet-chart-panel" data-row="1" data-col="0" data-sizeX="4" data-sizeY="1">
                <div class="e-panel-container">
                    <div class="e-panel-header">
                        <div class="col-lg-5 col-md-3 col-sm-3 col-xs-12 e-diet-panel-header-text">Calorie Diet</div>
                        <div class="col-lg-4 col-md-5 col-sm-5 col-xs-12 e-consumed">
                            <div class="e-consumed-wrapper-text col-lg-3 col-md-4 col-sm-4 col-xs-4">Consumed Calories</div>
                            <div class="e-consumed-wrapper-value col-lg-9 col-md-8 col-sm-8 col-xs-6">
                                <span class="e-consumed-value">@SampleService.DietData.ConsumedCalories</span>
                                <span class="e-card-cal-unit e-add-cal-unit"> kcal</span>
                                <span class="e-card-cal-unit e-add-cal-unit"> / @(SampleService.ExpectedCalories + " kcal")</span>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12 e-burned">
                            <div class="e-consumed-wrapper-text col-lg-4 col-md-4 col-sm-4 col-xs-4">Burned Calories</div>
                            <div class="e-consumed-wrapper-value col-lg-8 col-md-8 col-sm-8 col-xs-6">
                                @SampleService.DietData.BurnedCalories<span class="e-card-cal-unit e-add-cal-unit"> kcal</span>
                            </div>
                        </div>
                    </div>
                    <div class="e-diet-chart-panel-container e-panel-content">
                        <div class="e-chart-parent-div">
                            <div class="e-pie-chart-container" style="height: 100%">
                                <SfAccumulationChart ID="piecontainer" Theme="@theme" Width="100%" Height="80%" EnableSmartLabels="true">
                                    <AccumulationChartLegendSettings Visible="false" Position="LegendPosition.Right" Width="60%" Height="20%" ShapeHeight="20" ShapeWidth="20"></AccumulationChartLegendSettings>
                                    <AccumulationChartTooltipSettings Enable="true"></AccumulationChartTooltipSettings>
                                    <AccumulationChartCenter X="50%" Y="50%"></AccumulationChartCenter>
                                    <AccumulationChartEvents TooltipRender="OnTooltipRender" OnDataLabelRender="OnTextRender"></AccumulationChartEvents>
                                    <AccumulationChartSeriesCollection>
                                        <AccumulationChartSeries DataSource="@pieData" PointColorMapping="Fill" XName="X" YName="Y" StartAngle="325" EndAngle="325" InnerRadius="50%" Radius="@pieChartRadius" Explode="true" ExplodeOffset="10%">
                                            <AccumulationDataLabelSettings Visible="true">
                                                <AccumulationChartDataLabelFont Color="@(theme == Theme.Tailwind ? "#303343" : "#ffffff")"></AccumulationChartDataLabelFont>
                                            </AccumulationDataLabelSettings>
                                        </AccumulationChartSeries>
                                    </AccumulationChartSeriesCollection>
                                </SfAccumulationChart>
                            </div>
                            <div class="e-nutrition-container">
                                @if (SampleService.InnerWidth < 450)
                                {
                                    <table class="e-nutrition-table">
                                        <tr>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-protein-img"></div>
                                                    <div>PROTEINS</div>
                                                </div>
                                                <div class="e-nutrition-value">@(SampleService.DietData.CurrentTotalProteins + " gm")</div>
                                            </td>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-fat-img"></div>
                                                    <div>FAT</div>
                                                </div>
                                                <div class="e-nutrition-value">@(SampleService.DietData.CurrentTotalFat + " gm")</div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-carbo-img"></div>
                                                    <div>CARBOHYDRATES</div>
                                                </div>
                                                <div class="e-nutrition-value">@(SampleService.DietData.CurrentTotalCarbs + " gm")</div>
                                            </td>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-calcium-img"></div>
                                                    <div>CALCIUM</div>
                                                </div>
                                                <div class="e-nutrition-value">
                                                    @(SampleService.DietData.CurrentTotalCalcium < 1 ? (SampleService.DietData.CurrentTotalCalcium * 1000) + " mg" : SampleService.DietData.CurrentTotalCalcium + " gm")
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-sodium-img"></div>
                                                    <div>SODIUM</div>
                                                </div>
                                                <div class="e-nutrition-value">
                                                    @(SampleService.DietData.CurrentTotalSodium < 1 ? (SampleService.DietData.CurrentTotalSodium * 1000) + " mg" : SampleService.DietData.CurrentTotalSodium + " gm")
                                                </div>
                                            </td>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-iron-img"></div>
                                                    <div>IRON</div>
                                                </div>
                                                <div class="e-nutrition-value">
                                                    @(SampleService.DietData.CurrentTotalIron < 1 ? (SampleService.DietData.CurrentTotalIron * 1000) + " mg" : SampleService.DietData.CurrentTotalIron + " gm")
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                }
                                else
                                {
                                    <table class="e-nutrition-table">
                                        <tr>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-protein-img"></div>
                                                    <div>PROTEINS</div>
                                                </div>
                                                <div class="e-nutrition-value">@(SampleService.DietData.CurrentTotalProteins + " gm")</div>
                                            </td>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-fat-img"></div>
                                                    <div>FAT</div>
                                                </div>
                                                <div class="e-nutrition-value">@(SampleService.DietData.CurrentTotalFat + " gm")</div>
                                            </td>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-carbo-img"></div>
                                                    <div>CARBOHYDRATES</div>
                                                </div>
                                                <div class="e-nutrition-value">@(SampleService.DietData.CurrentTotalCarbs + " gm")</div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-calcium-img"></div>
                                                    <div>CALCIUM</div>
                                                </div>
                                                <div class="e-nutrition-value">
                                                    @(SampleService.DietData.CurrentTotalCalcium < 1 ? (SampleService.DietData.CurrentTotalCalcium * 1000) + " mg" : SampleService.DietData.CurrentTotalCalcium + " gm")
                                                </div>
                                            </td>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-sodium-img"></div>
                                                    <div>SODIUM</div>
                                                </div>
                                                <div class="e-nutrition-value">
                                                    @(SampleService.DietData.CurrentTotalSodium < 1 ? (SampleService.DietData.CurrentTotalSodium * 1000) + " mg" : SampleService.DietData.CurrentTotalSodium + " gm")
                                                </div>
                                            </td>
                                            <td>
                                                <div class="e-nutrition-text">
                                                    <div class="e-nutrition-img e-nutrition-iron-img"></div>
                                                    <div>IRON</div>
                                                </div>
                                                <div class="e-nutrition-value">
                                                    @(SampleService.DietData.CurrentTotalIron < 1 ? (SampleService.DietData.CurrentTotalIron * 1000) + " mg" : SampleService.DietData.CurrentTotalIron + " gm")
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (!SampleService.IsSmallDevice)
    {
        <div class="col-md-3 e-dashboard-profile">
            <div class="col-md-12 col-sm-12">
                <div id="diet-profile-panel-id" class="e-panel e-diet-profile-panel" data-row="0" data-col="4" data-sizeX="1" data-sizeY="3">
                    <div class="e-panel-container">
                        <Profile></Profile>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<AddMenuDialog @ref="@MenuDialogRef" StateChange="StateChange" />

@code{
    private AddMenuDialog? MenuDialogRef;
    private bool isToday { get; set; }
    private int breakFastRecom { get; set; } = 440;
    private int snack1Recom { get; set; } = 165; 
    private int lunchRecom { get; set; } = 440;
    private int snack2Recom { get; set; } = 165;
    private int dinnerRecom { get; set; } = 440;
    private string pieChartRadius { get; set; } = string.Empty;
    private List<PieChartData> pieData { get; set; } = new List<PieChartData>();
    private Theme theme { get; set; } = Theme.Tailwind;
    private double sumoftheChartSeries { get; set; }

    private List<PieChartData> GetPieChartData()
    {
        List<PieChartData> sampleChartData = new List<PieChartData>()
        {
            new PieChartData { X = "PROTEINS", Y = SampleService.DietData.CurrentTotalProteins, Fill = "#4DD291" },
            new PieChartData { X = "FAT", Y = SampleService.DietData.CurrentTotalFat, Fill = "#FC892C" },
            new PieChartData { X = "CARBOHYDRATES", Y = SampleService.DietData.CurrentTotalCarbs, Fill = "#FFC147" },
            new PieChartData { X = "CALCIUM", Y = SampleService.DietData.CurrentTotalCalcium, Fill = "#E25641" },
            new PieChartData { X = "SODIUM", Y = SampleService.DietData.CurrentTotalSodium, Fill = "#901C53" },
            new PieChartData { X = "IRON", Y = SampleService.DietData.CurrentTotalIron, Fill = "#CB4967" }
        };
        sumoftheChartSeries = sampleChartData.Sum(x => x.Y);
        return sampleChartData;
    }

    private void AddBtnClick(string clickedMenu)
    {
        if (MenuDialogRef != null)
        {
            switch(clickedMenu)
            {
                case "breakfast":
                    MenuDialogRef.CurrentMenuHeader = "Add Breakfast Menu";
                    MenuDialogRef.CurrentMenu = FitnessService.GetBreakfastMenu();
                    MenuDialogRef.CurrentRecom = breakFastRecom;
                    MenuDialogRef.CurrentAddedMenu = "Breakfast";
                    MenuDialogRef.CurrentTime = SampleService.DietData.CurrentBreakFastTime;
                    break;
                case "snack1":
                case "snack2":
                    MenuDialogRef.CurrentMenuHeader = "Add Snack Menu";
                    MenuDialogRef.CurrentMenu = FitnessService.GetSnackMenu();
                    if (clickedMenu == "snack1")
                    {
                        MenuDialogRef.CurrentRecom = snack1Recom;
                        MenuDialogRef.CurrentAddedMenu = "Snack 1";
                        MenuDialogRef.CurrentTime = SampleService.DietData.CurrentSnack1Time;
                    }
                    else
                    {
                        MenuDialogRef.CurrentRecom = snack2Recom;
                        MenuDialogRef.CurrentAddedMenu = "Snack 2";
                        MenuDialogRef.CurrentTime = SampleService.DietData.CurrentSnack2Time;
                    }
                    break;
                case "lunch":
                    MenuDialogRef.CurrentMenuHeader = "Add Lunch Menu";
                    MenuDialogRef.CurrentMenu = FitnessService.GetLunchMenu();
                    MenuDialogRef.CurrentRecom = lunchRecom;
                    MenuDialogRef.CurrentAddedMenu = "Lunch";
                    MenuDialogRef.CurrentTime = SampleService.DietData.CurrentLunchTime;
                    break;
                case "dinner":
                    MenuDialogRef.CurrentMenuHeader = "Add Dinner Menu";
                    MenuDialogRef.CurrentMenu = FitnessService.GetLunchMenu();
                    MenuDialogRef.CurrentRecom = dinnerRecom;
                    MenuDialogRef.CurrentAddedMenu = "Dinner";
                    MenuDialogRef.CurrentTime = SampleService.DietData.CurrentDinnerTime;
                    break;
            }
            MenuDialogRef.ShowDialog();
        }
    }

    private void EditMenu(string clickedMenu)
    {
        if (MenuDialogRef != null)
        {
            switch(clickedMenu)
            {
                case "breakfast":
                    MenuDialogRef.CurrentMenuHeader = "Add Breakfast Menu";
                    MenuDialogRef.CurrentMenu = FitnessService.GetBreakfastMenu();
                    UpdateCurrentMenu(SampleService.DietData.CurrentBreakFastMenu);
                    MenuDialogRef.CurrentRecom = breakFastRecom;
                    MenuDialogRef.CurrentAddedMenu = "Breakfast";
                    MenuDialogRef.CurrentTime = SampleService.DietData.CurrentBreakFastTime;
                    break;
                case "snack1":
                case "snack2":
                    MenuDialogRef.CurrentMenuHeader = "Add Snack Menu";
                    MenuDialogRef.CurrentMenu = FitnessService.GetSnackMenu();
                    if (clickedMenu == "snack1")
                    {
                        UpdateCurrentMenu(SampleService.DietData.CurrentSnack1Menu);
                        MenuDialogRef.CurrentRecom = snack1Recom;
                        MenuDialogRef.CurrentAddedMenu = "Snack 1";
                        MenuDialogRef.CurrentTime = SampleService.DietData.CurrentSnack1Time;
                    }
                    else
                    {
                        UpdateCurrentMenu(SampleService.DietData.CurrentSnack2Menu);
                        MenuDialogRef.CurrentRecom = snack2Recom;
                        MenuDialogRef.CurrentAddedMenu = "Snack 2";
                        MenuDialogRef.CurrentTime = SampleService.DietData.CurrentSnack2Time;
                    }
                    break;
                case "lunch":
                    MenuDialogRef.CurrentMenuHeader = "Add Lunch Menu";
                    MenuDialogRef.CurrentMenu = FitnessService.GetLunchMenu();
                    UpdateCurrentMenu(SampleService.DietData.CurrentLunchMenu);
                    MenuDialogRef.CurrentRecom = lunchRecom;
                    MenuDialogRef.CurrentAddedMenu = "Lunch";
                    MenuDialogRef.CurrentTime = SampleService.DietData.CurrentLunchTime;
                    break;
                case "dinner":
                    MenuDialogRef.CurrentMenuHeader = "Add Dinner Menu";
                    MenuDialogRef.CurrentMenu = FitnessService.GetLunchMenu();
                    UpdateCurrentMenu(SampleService.DietData.CurrentDinnerMenu);
                    MenuDialogRef.CurrentRecom = dinnerRecom;
                    MenuDialogRef.CurrentAddedMenu = "Dinner";
                    MenuDialogRef.CurrentTime = SampleService.DietData.CurrentDinnerTime;
                    break;
            };
            MenuDialogRef.UpdateTotalCal();
            MenuDialogRef.ShowDialog();
        }
    }

    private void UpdateCurrentMenu(List<MenuItems> menu)
    {
        for (int i = 0; i < menu.Count; i++)
        {
            for (int j = 0; j < MenuDialogRef?.CurrentMenu.Count; j++)
            {
                if (menu[i].Item == MenuDialogRef.CurrentMenu[j].Item)
                {
                    MenuDialogRef.CurrentMenu[j].IsAdded = true;
                    MenuDialogRef.CurrentMenu[j].Quantity = menu[i].Quantity ?? 1;
                    break;
                }
            }
        }
    }

    private void OnTooltipRender(TooltipRenderEventArgs args)
    {
        args.Text = args.Data.PointX + ": " + ((double)args.Data.PointY < 1 ? ((double)args.Data.PointY * 1000) + " mg" : (args.Data.PointY + " gm"));
    }

    private void OnTextRender(AccumulationTextRenderEventArgs args)
    {
        if (args.Point.Y > 0)
        {
            double value = (double)(args.Point.Y / sumoftheChartSeries * 100);
            args.Text = Math.Ceiling(value).ToString() + '%';
        }
    }

    private void StateChange()
    {
        pieData = GetPieChartData();
        StateHasChanged();
    }

    internal void CallStateHasChanged()
    {
        pieChartRadius = SampleService.IsDevice ? "90%" : "80%";
        theme = SampleService.CurrentTheme == "Light" ? Theme.Tailwind : Theme.TailwindDark;
        isToday = SampleService.CurrentDate?.Date == DateTime.Today;
        MenuDialogRef?.UpdateProps();
        pieData = GetPieChartData();
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        pieChartRadius = SampleService.IsDevice ? "90%" : "80%";
        isToday = SampleService.CurrentDate?.Date == DateTime.Today;
        theme = SampleService.CurrentTheme == "Light" ? Theme.Tailwind : Theme.TailwindDark;
        pieData = GetPieChartData();
    }
}